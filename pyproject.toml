[project]
name = "ansible-cloudy"
version = "0.1.0"
description = "Ansible automation for cloud infrastructure"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Ansible Cloudy Team", email = "admin@example.com"}
]
keywords = ["ansible", "automation", "infrastructure", "cloud"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "ansible>=6.0.0",
    "passlib>=1.7.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "ansible-lint>=6.0.0",
    "yamllint>=1.28.0",
    "ruamel.yaml>=0.17.0",
    "jsonschema>=4.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "elevenlabs>=0.2.0",
    "pyttsx3>=2.90",
]


[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["dev.cli"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.j2", "*.cfg", "*.json"]

[tool.pytest.ini_options]
testpaths = ["dev/cli/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"

[tool.coverage.run]
source = ["dev/cli"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]