---
# cloudy/tasks/sys/ssh/harden-production.yml
# Production SSH hardening for maximum security

- name: Create SSH banner file
  copy:
    dest: /etc/ssh/banner.txt
    content: |
      ******************************************************************
      *                      AUTHORIZED ACCESS ONLY                    *
      * This system is for authorized use only. All activity is       *
      * monitored and logged. Unauthorized access attempts will be     *
      * investigated and may result in prosecution.                    *
      ******************************************************************
    mode: '0644'

- name: Configure production SSH hardening
  blockinfile:
    path: /etc/ssh/sshd_config
    marker: "# {mark} ANSIBLE MANAGED - Production SSH Hardening"
    block: |
      # Protocol and Encryption
      Protocol 2
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com
      KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
      
      # Authentication hardening
      LoginGraceTime 30
      MaxAuthTries 3
      MaxSessions 10
      StrictModes yes
      PermitUserEnvironment no
      PermitEmptyPasswords no
      ChallengeResponseAuthentication no
      KerberosAuthentication no
      GSSAPIAuthentication no
      HostbasedAuthentication no
      IgnoreRhosts yes
      
      # Connection settings
      ClientAliveInterval 300
      ClientAliveCountMax 2
      MaxStartups 10:30:60
      TCPKeepAlive yes
      Compression delayed
      
      # Security features
      Banner /etc/ssh/banner.txt
      DebianBanner no
      X11Forwarding no
      AllowAgentForwarding no
      AllowTcpForwarding no
      PermitTunnel no
      
      # Logging
      LogLevel VERBOSE
      SyslogFacility AUTH
  notify: restart ssh

- name: Configure user restrictions for SSH
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AllowUsers'
    line: "AllowUsers {{ ssh_allowed_users | default('root ' + (admin_user | default('')) if admin_user is defined else 'root') }}"
  when: ssh_restrict_users | default(true)
  notify: restart ssh

- name: Set secure SSH host key permissions
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0600'
  loop:
    - /etc/ssh/ssh_host_rsa_key
    - /etc/ssh/ssh_host_ecdsa_key
    - /etc/ssh/ssh_host_ed25519_key
  ignore_errors: yes

- name: Set SSH public key permissions
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - /etc/ssh/ssh_host_rsa_key.pub
    - /etc/ssh/ssh_host_ecdsa_key.pub
    - /etc/ssh/ssh_host_ed25519_key.pub
  ignore_errors: yes

- name: Create SSH rate limiting with UFW
  ufw:
    rule: limit
    port: "{{ ssh_port | default(22022) }}"
    proto: tcp
    comment: "SSH rate limiting"
  when: ssh_rate_limit | default(true)