# Granular Task: Change User Password
# Equivalent to: cloudy-old/sys/user.py::sys_user_change_password()
# Usage: ansible-playbook tasks/sys/user/change-password.yml -e "username=john password=newpass"

---
- name: Validate username is not root
  fail:
    msg: "Cannot change root password using this task"
  when: username == "root"

- name: Generate random password if not provided
  set_fact:
    generated_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=20') }}"
  when: password is not defined or password == ""
  no_log: true

- name: Set effective password
  set_fact:
    effective_password: "{{ password if (password is defined and password != '') else generated_password }}"
  no_log: true
  
- name: Hash password using Python
  command: |
    python3 -c "
    import crypt
    import os
    salt = crypt.mksalt(crypt.METHOD_SHA512)
    print(crypt.crypt('{{ effective_password }}', salt))
    "
  register: hashed_password
  changed_when: false
  no_log: true

- name: Change password for user {{ username }}
  user:
    name: "{{ username }}"
    password: "{{ hashed_password.stdout }}"
    update_password: always
  register: password_change_result
  

  
- name: Display success message
  debug:
    msg: "‚úÖ Password successfully changed for user: {{ username }}"
  when: password_change_result.changed

- name: Display generated password warning
  debug:
    msg: |
      ‚ö†Ô∏è  IMPORTANT: Random password generated for user {{ username }}
      üîë Password: {{ generated_password }}
      üìù Please save this password securely - it will not be shown again!
  when: 
    - password is not defined or password == ""
    - generated_password is defined