# Granular Task: Install Docker CE
# Equivalent to: cloudy-old/sys/docker.py::sys_docker_install()
# Usage: include_tasks: ../../tasks/sys/docker/install-docker.yml

---
- name: Install required packages for Docker repository
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: true
    
- name: Remove old Docker GPG key if exists
  apt_key:
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: absent
  ignore_errors: true

- name: Remove old Docker repository if exists
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: absent
  ignore_errors: true

- name: Create directory for Docker GPG key
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    force: true

- name: Add Docker repository with new GPG key
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
    
- name: Update package cache after adding Docker repo
  apt:
    update_cache: true
    
- name: Install Docker CE
  apt:
    name: docker-ce
    state: present
  register: docker_install_result
  
- name: Enable Docker service
  systemd:
    name: docker
    enabled: true
    state: started
  register: docker_service_result
  
- name: Add grunt user to docker group
  user:
    name: "{{ grunt_user }}"
    groups: docker
    append: true
  when: grunt_user is defined
  register: docker_group_result
  
- name: Verify Docker installation
  command: docker --version
  register: docker_version
  changed_when: false
  
- name: Display Docker installation status
  debug:
    msg: |
      âœ… Docker CE installed successfully
      Version: {{ docker_version.stdout }}
      Service: {{ 'Started and enabled' if docker_service_result.changed else 'Already running' }}
      Installation: {{ 'New installation' if docker_install_result.changed else 'Already installed' }}
      Admin user: {{ 'Added to docker group' if docker_group_result.changed | default(false) else 'Already in docker group or not configured' }}