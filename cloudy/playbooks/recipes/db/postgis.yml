# Recipe: PostgreSQL + PostGIS Database Server Setup
# Based on: cloudy-old/srv/recipe_database_psql_gis.py
# Usage: ansible-playbook playbooks/recipes/database-postgis-server.yml -i inventory/hosts.yml

---
- name: PostgreSQL + PostGIS Database Server Setup Recipe
  hosts: service_targets
  gather_facts: true
  become: true
  
  vars:
    task_paths: "../../../tasks"
    # Database Configuration
    pg_version: "{{ postgresql_version | default('15') }}"
    pgis_version: "{{ postgis_version | default('') }}"
    db_port: "{{ database_port | default(5432) }}"
    
    # Setup flags
    run_generic_setup: "{{ generic | default(true) }}"
    setup_firewall: true
    
  pre_tasks:
    # Ensure proper secure connection
    - name: Validate secure connection
      include_tasks: "{{ task_paths }}/sys/core/ensure-secure-connection.yml"
    
    - name: Display database server setup information
      debug:
        msg: |
          ðŸš€ Starting PostgreSQL + PostGIS Database Server Setup
          Target: {{ inventory_hostname }} ({{ ansible_host }})
          PostgreSQL Version: {{ pg_version }}
          PostGIS Version: {{ 'Latest available' if pgis_version == '' else pgis_version }}
          Port: {{ db_port }}
          
  tasks:
    # Generic Server Setup - Include core foundation tasks
    - name: Initialize system
      include_tasks: "{{ task_paths }}/sys/core/init.yml"
      when: run_generic_setup | bool
      tags: [generic, foundation, init]
      
    - name: Update system packages
      include_tasks: "{{ task_paths }}/sys/core/update.yml"
      when: run_generic_setup | bool
      tags: [generic, foundation, update]
      
    - name: Install common utilities
      include_tasks: "{{ task_paths }}/sys/core/install-common.yml"
      when: run_generic_setup | bool
      tags: [generic, foundation, packages]
      
    - name: Install UFW firewall
      include_tasks: "{{ task_paths }}/sys/firewall/install.yml"
      when: run_generic_setup | bool
      tags: [generic, foundation, firewall]
      
    # PostgreSQL Installation
    - name: Install PostgreSQL server
      include_tasks: "{{ task_paths }}/db/postgresql/install.yml"
      vars:
        pg_version: "{{ pg_version }}"
      tags: [database, postgresql, install]
      
    # PostGIS Installation and Configuration
    - name: Install PostGIS
      include_tasks: "{{ task_paths }}/db/postgis/install.yml"
      vars:
        psql_version: "{{ pg_version }}"
        pgis_version: "{{ pgis_version }}"
      tags: [database, postgis, install]
      
    - name: Configure PostGIS template
      include_tasks: "{{ task_paths }}/db/postgis/configure.yml"
      vars:
        pg_version: "{{ pg_version }}"
        pgis_version: "{{ pgis_version }}"
        legacy: "{{ legacy_postgis | default(false) }}"
      tags: [database, postgis, configure]
      
    # Firewall Configuration
    - name: Allow PostgreSQL through firewall
      include_tasks: "{{ task_paths }}/sys/firewall/allow-postgresql.yml"
      when: setup_firewall | bool
      tags: [firewall, postgresql]
      
      
  post_tasks:
    - name: Display database server completion summary
      debug:
        msg: |
          ðŸŽ‰ âœ… POSTGRESQL + POSTGIS DATABASE SERVER SETUP COMPLETED SUCCESSFULLY!
          ðŸ“‹ Configuration Summary:
             â”œâ”€â”€ PostgreSQL Version: {{ pg_version }}
             â”œâ”€â”€ PostGIS Version: {{ pgis_version if pgis_version != '' else 'Latest available' }}
             â”œâ”€â”€ Template Database: template_postgis (ready for spatial databases)
             â”œâ”€â”€ Connection: Direct PostgreSQL connection
             â”œâ”€â”€ Backend Port: {{ db_port }}
             â”œâ”€â”€ Firewall: {{ 'Database ports allowed' if setup_firewall else 'Not configured' }}
             â””â”€â”€ Status: Ready for spatial database applications
          
          ðŸš€ PostgreSQL + PostGIS database server is ready!
          
          ðŸ“– Connection Information:
          - Host: {{ ansible_host }}
          - Port: {{ db_port }}
          - Template: template_postgis (for new spatial databases)
          
          ðŸ“– Next Steps:
          1. Create spatial databases: 
             createdb -T template_postgis mydatabase
          2. Create database users and set permissions
          3. Configure client applications to connect
          4. Set up backup and monitoring