---
# Recipe: SSH Port Change
# Purpose: Change SSH port from one port to another
# Usage: cli harden --from-port 22 --to-port 22022
# Note: This is now a simple port change tool, SSH hardening moved to security.yml

- name: SSH Port Change
  hosts: all
  gather_facts: false
  become: true
  
  vars:
    # These will be provided via CLI parameters
    from_port: "{{ from_port | default(22) }}"
    to_port: "{{ to_port | default(22022) }}"
    
  pre_tasks:
    - name: Validate port parameters
      fail:
        msg: |
          ‚ùå ERROR: Port parameters required!
          
          Usage: cli harden --from-port [current] --to-port [new]
          Example: cli harden --from-port 22 --to-port 22022
          
          Current values:
          - from_port: {{ from_port }}
          - to_port: {{ to_port }}
      when: from_port == to_port
    
    - name: Display port change plan
      debug:
        msg: |
          üîÑ SSH Port Change Plan
          =====================
          Server: {{ inventory_hostname }} ({{ ansible_host }})
          Current Port: {{ from_port }}
          New Port: {{ to_port }}
          
          ‚ö†Ô∏è  WARNING: After this change, you'll need to:
          1. Update your inventory to use port {{ to_port }}
          2. Update firewall rules if needed
          3. Connect using: ssh -p {{ to_port }} user@host
  
  tasks:
    - name: Update SSH port in config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?Port\s+'
        line: "Port {{ to_port }}"
        backup: true
      register: port_changed
    
    - name: Validate SSH configuration
      command: sshd -t
      changed_when: false
    
    - name: Open new port in firewall (if UFW is active)
      ufw:
        rule: allow
        port: "{{ to_port }}"
        proto: tcp
        comment: "SSH on new port"
      when: 
        - port_changed.changed
        - ansible_facts.services is defined
        - "'ufw' in ansible_facts.services"
      ignore_errors: true
    
    - name: Restart SSH service
      service:
        name: ssh
        state: restarted
      when: port_changed.changed
    
    # Give a moment for SSH to restart
    - name: Wait for SSH to restart
      pause:
        seconds: 5
      when: port_changed.changed
    
  post_tasks:
    - name: Display completion message
      debug:
        msg: |
          ‚úÖ SSH Port Change Complete!
          
          The SSH service is now listening on port {{ to_port }}.
          
          ‚ö†Ô∏è  IMPORTANT: This connection will timeout, which is expected.
          
          Next steps:
          1. Update your inventory file to use port {{ to_port }}
          2. Test connection: ssh -p {{ to_port }} {{ ansible_user }}@{{ ansible_host }}
          3. Close old port {{ from_port }} in firewall if desired
      when: port_changed.changed
    
    - name: No changes needed
      debug:
        msg: "‚ÑπÔ∏è  SSH is already configured for port {{ to_port }}. No changes made."
      when: not port_changed.changed