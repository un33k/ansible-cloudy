# Recipe: Redis Cache Server Setup
# Usage: ansible-playbook playbooks/recipes/cache/redis.yml -i inventory/hosts.yml

---
- name: Redis Cache Server Setup Recipe
  hosts: service_targets
  gather_facts: true
  become: true
  
  vars_files:
    - "../../../defaults/all.yml"
    - "../../../defaults/redis.yml"
  
  vars:
    task_paths: "../../../tasks"
    
    # Apply defaults with vault override pattern
    redis_port: "{{ vault_redis_port | default(vault_redis_port_default) }}"
    redis_bind: "{{ vault_redis_bind | default(redis_bind_default) }}"
    redis_maxmemory_mb: "{{ vault_redis_memory_mb | default(vault_redis_memory_mb_default) }}"
    redis_requirepass: "{{ vault_redis_password }}"
    redis_loglevel: "{{ vault_redis_loglevel | default(redis_loglevel_default) }}"
    redis_logfile: "{{ vault_redis_logfile | default(redis_logfile_default) }}"
    redis_dir: "{{ vault_redis_dir | default(redis_dir_default) }}"
    redis_appendonly: "{{ vault_redis_appendonly | default(redis_appendonly_default) }}"
    
    # Setup flags
    run_generic_setup: "{{ generic | default(true) }}"
    setup_firewall: true
    
  pre_tasks:
    # Ensure proper secure connection
    - name: Validate secure connection
      include_tasks: "{{ task_paths }}/sys/core/ensure-secure-connection.yml"
    
    - name: Display cache server setup information
      debug:
        msg: |
          ðŸš€ Starting Redis Cache Server Setup
          Target: {{ inventory_hostname }} ({{ ansible_host }})
          Port: {{ redis_port }}
          Bind: {{ redis_bind }}
          Memory: {{ redis_maxmemory_mb }}MB
          
  tasks:
    # Generic Server Setup - Include core tasks
    - name: Initialize system
      include_tasks: "{{ task_paths }}/sys/core/init.yml"
      when: run_generic_setup | bool
      tags: [generic, foundation, init]
      
      
    - name: Update system packages
      include_tasks: "{{ task_paths }}/sys/core/update.yml"
      when: run_generic_setup | bool
      tags: [generic, foundation, update]
      
    - name: Install common utilities
      include_tasks: "{{ task_paths }}/sys/core/install-common.yml"
      when: run_generic_setup | bool
      tags: [generic, foundation, packages]
      
    # Redis Installation and Configuration
    - name: Install Redis server
      include_tasks: "{{ task_paths }}/sys/redis/install.yml"
      tags: [redis, install]
      
    - name: Configure Redis memory
      include_tasks: "{{ task_paths }}/sys/redis/configure-memory.yml"
      vars:
        memory: "{{ redis_maxmemory_mb }}"
        divider: 0
      tags: [redis, memory]
      
    - name: Configure Redis port
      include_tasks: "{{ task_paths }}/sys/redis/configure-port.yml"
      vars:
        port: "{{ redis_port }}"
      tags: [redis, port]
      
    - name: Configure Redis interface
      include_tasks: "{{ task_paths }}/sys/redis/configure-interface.yml"
      vars:
        interface: "{{ redis_bind }}"
      tags: [redis, interface]
      
    - name: Configure Redis password
      include_tasks: "{{ task_paths }}/sys/redis/configure-password.yml"
      vars:
        password: "{{ redis_requirepass }}"
      when: redis_requirepass != ""
      tags: [redis, password]
      
    # Firewall Configuration
    - name: Allow Redis port through firewall
      include_tasks: "{{ task_paths }}/sys/firewall/allow-port.yml"
      vars:
        port: "{{ redis_port }}"
        proto: tcp
      when: setup_firewall | bool
      tags: [firewall, redis]
      
  post_tasks:
    - name: Display cache server completion summary
      debug:
        msg: |
          ðŸŽ‰ âœ… REDIS CACHE SERVER SETUP COMPLETED SUCCESSFULLY!
          ðŸ“‹ Configuration Summary:
             â”œâ”€â”€ Port: {{ redis_port }}
             â”œâ”€â”€ Bind: {{ redis_bind }}
             â”œâ”€â”€ Memory: {{ redis_maxmemory_mb }}MB
             â”œâ”€â”€ Password: {{ 'Set' if redis_requirepass != '' else 'None' }}
             â”œâ”€â”€ Firewall: {{ 'Port ' + (redis_port | string) + ' allowed' if setup_firewall else 'Not configured' }}
             â””â”€â”€ Status: Running and ready for connections
          
          ðŸš€ Redis cache server is ready for use!
          
          ðŸ“– Connection Information:
          - Host: {{ ansible_host }}
          - Port: {{ redis_port }}
          - Auth: {{ 'Required (password set)' if redis_requirepass != '' else 'None' }}
          - Bind: {{ redis_bind }}
          
          ðŸ“– Next Steps:
          1. Test connection: redis-cli -h {{ ansible_host }} -p {{ redis_port }}
          2. Configure your applications to use this Redis instance
          3. Set up monitoring and backup if needed