# Staging Inventory - Production-like but separate environment
# Copy and customize for your staging environment

---
all:  
  vars:
    # === CONNECTION CONFIGURATIONS ===
    
    # Default connection (root with SSH keys - post-security)
    ansible_user: root
    ansible_port: "{{ vault_ssh_port | default(22) }}"
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: ~/.ssh/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    
    # Global Settings (with vault fallbacks)
    git_user_full_name: "{{ vault_git_user_full_name | default('Staging Admin') }}"
    git_user_email: "{{ vault_git_user_email | default('staging@example.com') }}"
    timezone: "{{ vault_timezone | default('America/New_York') }}"
    locale: "{{ vault_locale | default('en_US.UTF-8') }}"
    
  children:
    # === CONNECTION SWITCHING GROUPS ===
    
    # Security setup group - uses root with password for initial setup
    security_targets:
      vars:
        ansible_user: root
        ansible_port: 22
        ansible_ssh_pass: "{{ vault_root_password | default('changeme') }}"
        ansible_host_key_checking: false
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      hosts:
        # Include all staging servers for security setup
        staging-web: {}
        staging-db: {}
        staging-cache: {}
    
    # Post-security group - uses root with SSH keys for all operations  
    service_targets:
      vars:
        ansible_user: "{{ vault_admin_user | default('admin') }}"
        ansible_port: "{{ vault_ssh_port | default(22) }}"
        ansible_host_key_checking: false
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      hosts:
        # Include all staging servers for service operations
        staging-web: {}
        staging-db: {}
        staging-cache: {}
    
    # === SERVICE-SPECIFIC GROUPS ===
    
    # Web Application Servers
    web_servers:
      vars:
        admin_user: "{{ vault_admin_user | default('admin') }}"
        admin_password: "{{ vault_admin_password | default('changeme') }}"
        admin_groups: "admin,www-data"
        webserver: gunicorn
        webserver_port: 8181
        python_version: "3.11"
        geo_ip_enabled: true
        
      hosts:
        staging-web:
          ansible_host: 10.0.10.10
          hostname: staging-web.example.com
          domain_name: staging.example.com

    # Database Servers
    database_servers:
      vars:
        admin_user: "{{ vault_admin_user | default('admin') }}"
        admin_password: "{{ vault_admin_password | default('changeme') }}"
        admin_groups: "admin,www-data"
        postgresql_version: "15"
        postgis_version: "3.3"
        listen_address: "*"
        
      hosts:
        staging-db:
          ansible_host: 10.0.10.11
          hostname: staging-db.example.com
          database_port: 5432
          postgres_password: "{{ vault_postgres_password | default('changeme') }}"

    # Cache Servers  
    cache_servers:
      vars:
        admin_user: "{{ vault_admin_user | default('admin') }}"
        admin_password: "{{ vault_admin_password | default('changeme') }}"
        admin_groups: "admin,www-data"
        redis_memory: 256  # MB - smaller for staging
        redis_interface: "0.0.0.0"
        
      hosts:
        staging-cache:
          ansible_host: 10.0.10.12
          hostname: staging-cache.example.com
          port: 6379
          password: "{{ vault_redis_password | default('changeme') }}"