# Test Inventory for All Simplified Workflows
# Step 1: ansible-playbook -i inventory/test.yml playbooks/recipes/core/security.yml 
# Step 2: ansible-playbook -i inventory/test.yml playbooks/recipes/core/base.yml
# Step 3: ansible-playbook -i inventory/test.yml playbooks/recipes/[category]/[service].yml

---
all:
  vars:
    # Global Settings
    git_user_full_name: "Test User"
    
    # Load dev vault variables  
    vault_file: ".secrets/dev.yml"
    git_user_email: "test@example.com"
    timezone: "America/New_York"
    
    # Security Configuration - Super User Section
    # Root user is only used with password initially to configure the system
    # Once the SSH key is installed, password access for super user is disabled
    ansible_user: root
    ansible_port: 22
    ansible_ssh_pass: "{{ vault_root_password }}"
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: ~/.ssh/id_rsa
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    # Security Configuration - Admin User Section
    # All operations and services shall be run under this user
    # Cronjobs will also be run under this user
    admin_user: admin
    admin_password: "{{ vault_admin_password }}"
    admin_groups: "admin,www-data"
    admin_ssh_private_key_file: ~/.ssh/id_rsa

  hosts:
    # Main test server - used for all recipes
    test-server:
      ansible_host: 10.10.10.198
      hostname: test-server.example.com
      ansible_ssh_private_key_file: ~/.ssh/id_rsa
      
      # Service-specific configs (when testing individual services)
      domain_name: test-server.example.com
      postgresql_version: "15"
      postgis_version: "3.3"
      database_port: 5433
      redis_memory_mb: 512
      redis_port: 6379
      webserver: gunicorn
      webserver_port: 8181