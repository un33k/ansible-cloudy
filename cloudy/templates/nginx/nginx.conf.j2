# {{ ansible_managed }}
# Nginx Production Configuration - Cloudy Load Balancer

user {{ nginx_user | default('www-data') }};
worker_processes {{ nginx_worker_processes | default('auto') }};
worker_rlimit_nofile {{ nginx_worker_rlimit_nofile | default(65535) }};
pid /run/nginx.pid;

# Load dynamic modules
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections {{ nginx_worker_connections | default(2048) }};
    multi_accept {{ nginx_multi_accept | default('on') }};
    use epoll;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    server_names_hash_bucket_size 128;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    ##
    # Security Settings
    ##
    
    # Prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Permissions Policy
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    ##
    # Rate Limiting
    ##
    
    # Zone for general rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate={{ nginx_rate_limit_general | default('10r/s') }};
    limit_req_zone $binary_remote_addr zone=api:10m rate={{ nginx_rate_limit_api | default('20r/s') }};
    limit_req_zone $binary_remote_addr zone=auth:10m rate={{ nginx_rate_limit_auth | default('5r/m') }};
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Rate limit status codes
    limit_req_status 429;
    limit_conn_status 429;
    
    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL optimization
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver {{ nginx_resolver | default('8.8.8.8 8.8.4.4') }} valid=300s;
    resolver_timeout 5s;
    
    # DH parameters
    ssl_dhparam {{ nginx_ssl_dhparam | default('/etc/nginx/dhparam.pem') }};
    
    ##
    # Logging Settings
    ##
    
    # Custom log format for analytics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time"'
    '}';
    
    access_log {{ nginx_access_log | default('/var/log/nginx/access.log') }} {{ nginx_log_format | default('main') }};
    error_log {{ nginx_error_log | default('/var/log/nginx/error.log') }} {{ nginx_error_log_level | default('warn') }};
    
    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;
    gzip_min_length 256;
    gzip_disable "msie6";
    
    ##
    # Proxy Cache Settings
    ##
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache:{{ nginx_cache_size | default('10m') }} 
                     max_size={{ nginx_cache_max_size | default('1g') }} 
                     inactive={{ nginx_cache_inactive | default('60m') }} 
                     use_temp_path=off;
    
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_lock on;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;
    
    ##
    # Buffer Settings
    ##
    client_body_buffer_size {{ nginx_client_body_buffer_size | default('128k') }};
    client_max_body_size {{ nginx_client_max_body_size | default('20m') }};
    client_header_buffer_size {{ nginx_client_header_buffer_size | default('1k') }};
    large_client_header_buffers {{ nginx_large_client_header_buffers | default('4 16k') }};
    
    proxy_buffer_size {{ nginx_proxy_buffer_size | default('4k') }};
    proxy_buffers {{ nginx_proxy_buffers | default('8 4k') }};
    proxy_busy_buffers_size {{ nginx_proxy_busy_buffers_size | default('8k') }};
    
    ##
    # Timeout Settings
    ##
    client_header_timeout {{ nginx_client_header_timeout | default('60s') }};
    client_body_timeout {{ nginx_client_body_timeout | default('60s') }};
    send_timeout {{ nginx_send_timeout | default('60s') }};
    proxy_connect_timeout {{ nginx_proxy_connect_timeout | default('60s') }};
    proxy_send_timeout {{ nginx_proxy_send_timeout | default('60s') }};
    proxy_read_timeout {{ nginx_proxy_read_timeout | default('60s') }};
    
    ##
    # Upstream Configuration
    ##
    
    # Backend servers
    upstream backend {
        # Load balancing method
        {{ nginx_lb_method | default('least_conn') }};
        
        # Keepalive connections
        keepalive {{ nginx_upstream_keepalive | default(32) }};
        keepalive_timeout {{ nginx_upstream_keepalive_timeout | default('60s') }};
        keepalive_requests {{ nginx_upstream_keepalive_requests | default(100) }};
        
        # Backend servers
{% for backend in nginx_backends | default([]) %}
        server {{ backend.host }}:{{ backend.port | default(80) }} weight={{ backend.weight | default(1) }} max_fails={{ backend.max_fails | default(3) }} fail_timeout={{ backend.fail_timeout | default('30s') }}{% if backend.backup | default(false) %} backup{% endif %};
{% endfor %}
        
        # Health check (Nginx Plus feature, commented for open source)
        # health_check interval=5s fails=3 passes=2;
    }
    
    ##
    # Map for WebSocket upgrade
    ##
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    ##
    # GeoIP blocking (optional)
    ##
{% if nginx_geoip_enabled | default(false) %}
    geoip_country /usr/share/GeoIP/GeoIP.dat;
    map $geoip_country_code $allowed_country {
        default yes;
{% for country in nginx_blocked_countries | default([]) %}
        {{ country }} no;
{% endfor %}
    }
{% endif %}
    
    ##
    # Virtual Host Configs
    ##
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}