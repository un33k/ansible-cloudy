# Nginx reverse proxy configuration for Portainer
# Generated by ansible-cloudy

upstream portainer_backend {
    server {{ portainer_container_name }}:{{ portainer_internal_port }};
}

server {
    listen 80;
    server_name {{ portainer_domain }};
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name {{ portainer_domain }};
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{ portainer_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ portainer_domain }}/privkey.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Proxy settings
    location / {
        proxy_pass http://portainer_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for long-running operations
        proxy_read_timeout 86400;
    }
    
    # WebSocket support for Portainer
    location /api/websocket/ {
        proxy_pass http://portainer_backend/api/websocket/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}