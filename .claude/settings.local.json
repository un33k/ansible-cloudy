{
  "project": {
    "name": "Ansible Cloudy",
    "description": "Infrastructure as Code for cloud server management with intelligent automation",
    "type": "infrastructure-automation",
    "languages": ["python", "yaml", "bash"],
    "cli_command": "cli",
    "python_module": "dev.claudia.cli.main"
  },
  
  "context": {
    "architecture": {
      "cli": "dev/claudia - Python CLI with modular operations",
      "playbooks": "cloudy/playbooks - Ansible recipes organized by category",
      "inventory": "cloudy/inventory - Environment-specific configurations",
      "tasks": "cloudy/tasks - Reusable Ansible task modules"
    },
    "key_flows": {
      "deployment": "harden → security → base → services",
      "connection_groups": "harden_targets (password) → security_targets (SSH keys) → service_targets (SSH keys)",
      "ports": "Initial: 22, Final: 22022 (vault-driven)"
    },
    "vault_variables": {
      "location": ".vault/*.yml",
      "key_vars": ["vault_root_user", "vault_root_password", "vault_ssh_port_initial", "vault_ssh_port_final", "vault_grunt_user"]
    },
    "recent_changes": {
      "ssh_hardening": "Implemented atomic SSH hardening as separate first step",
      "variable_naming": "Migrated to new vault variable names (vault_root_*, vault_grunt_*, vault_ssh_port_*)",
      "scripts_organization": "All scripts now in scripts/ directory (test/, verify/, examples/)"
    }
  },
  
  "important_paths": {
    "scripts": "./scripts/ - Testing, verification, and example scripts",
    "tests": "./test/e2e/ - End-to-end Docker tests",
    "docs": "./docs/ - Project documentation",
    "vault": ".vault/*.yml - Sensitive configuration (git-ignored)"
  },
  
  "common_commands": {
    "setup": "./bootstrap.sh && source .venv/bin/activate",
    "harden": "cli harden --install",
    "security": "cli security --install",
    "base": "cli base --install",
    "test_syntax": "./scripts/test/test-simple.sh",
    "test_full": "./scripts/test/run-complete-test.sh",
    "verify": "./scripts/verify/verify-variable-mapping.sh",
    "check_server": "./scripts/examples/check-server-status.sh <ip>"
  },
  
  "permissions": {
    "allow": [
      "Bash(true)",
      "Bash(ls:*)",
      "Bash(./bootstrap.sh)",
      "Bash(source:*)",
      "Bash(./bootstrap.sh:*)",
      "Bash(grep:*)",
      "Bash(echo $VIRTUAL_ENV)",
      "Bash(/dev/null)",
      "Bash(./claudia --help)",
      "Bash(find:*)",
      "Bash(./claudia dev:*)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(act:*)",
      "Bash(./claudia security:*)",
      "Bash(ansible-playbook:*)",
      "Bash(python:*)",
      "Bash(timeout:*)",
      "Bash(ansible-lint:*)",
      "Bash(touch:*)",
      "Bash(./claudia:*)",
      "Bash(mv:*)",
      "Bash(pip install:*)",
      "Bash(flake8:*)",
      "Bash(black:*)",
      "Bash(ansible:*)",
      "Bash(ssh:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(./claudia --version)",
      "Bash(./claudia --help)",
      "Bash(./claudia --list-services)",
      "Bash(./claudia psql:*)",
      "Bash(./claudia badarg)",
      "Bash(./claudia redis:*)",
      "Bash(ping:*)",
      "Bash(./test-claudia-connection.sh:*)",
      "Bash(./test-fresh-server.sh:*)",
      "Bash(cat:*)",
      "Bash(./claudia:*)",
      "Bash(git push:*)",
      "Bash(bash -n:*)",
      "Bash(export ANSIBLE_VAULT_PASSWORD_FILE=.vault_pass)",
      "Bash(ANSIBLE_VAULT_PASSWORD_FILE=.vault_pass git push)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(./test-encryption-check.sh:*)",
      "Bash(if ./test-encryption-check.sh .test-vault-file.yml)",
      "Bash(then echo \"ENCRYPTED\")",
      "Bash(else echo \"NOT ENCRYPTED\")",
      "Bash(fi)",
      "Bash(./.githooks/install-hooks.sh:*)",
      "Bash(unset ANSIBLE_VAULT_PASSWORD_FILE)",
      "Bash(npm --version)",
      "Bash(git check-ignore:*)",
      "Bash(rg:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(claudia:*)",
      "Bash(cli dev yaml)",
      "Bash(cli security:*)",
      "Bash(cli:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(sshpass:*)",
      "Bash(ansible-inventory:*)",
      "Bash(tree:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(./scripts/*)",
      "Bash(python -m dev.claudia.cli.main:*)"
    ],
    "deny": []
  }
}