---
# Production Environment Configuration
# Copy this file to your own vault file and edit the values

# === AUTHENTICATION CREDENTIALS ===
vault_root_user: "root"  # Required - no default
vault_root_password: "secure_root_password_for_production"  # Required - no default

# === OPTIONAL GRUNT USER ===
vault_grunt_user: ""  # Optional - leave empty to skip creation in production
vault_grunt_password: "secure_grunt_password_for_production"  # Optional - generated if not set
vault_grunt_groups_string: "sudo,adm,systemd-journal,www-data,docker,ssl-cert"  # Optional - has default

# === SSH CONFIGURATION ===
vault_ssh_port: 2222  # Optional - defaults to 22 (use non-standard for production)

# === GLOBAL SERVER CONFIGURATION ===
vault_git_user_full_name: "Production Deploy User"  # Optional - has default
vault_git_user_email: "deploy@yourcompany.com"  # Optional - has default
vault_timezone: "UTC"  # Optional - has default
vault_locale: "en_US.UTF-8"  # Optional - has default

# === SERVICE CREDENTIALS ===
vault_postgres_password: "secure_production_postgres_password"  # Required when using PostgreSQL
vault_redis_password: "secure_production_redis_password"  # Required when using Redis with auth
vault_vpn_passphrase: "secure_production_vpn_passphrase"  # Required when using VPN

# === SERVICE PORTS ===
# Production recommendation: Use non-standard ports for security
vault_postgresql_port: 6543    # Optional - defaults to 5432 (use non-standard for production)
vault_pgbouncer_port: 5432     # Optional - defaults to 6432 (swap with PG port for transparency)
# Apps connect to localhost:5432 → PgBouncer → Network → DB:6543
vault_redis_port: 6379         # Optional - defaults to 6379
vault_mysql_port: 3306         # Optional - defaults to 3306
vault_nginx_http_port: 80      # Optional - defaults to 80
vault_nginx_https_port: 443    # Optional - defaults to 443

# === SSH KEY CONFIGURATION ===
vault_root_ssh_private_key_file: "~/.ssh/id_rsa_prod"  # Optional - has default
vault_grunt_ssh_private_key_file: "~/.ssh/id_rsa_prod"  # Optional - has default
vault_root_ssh_password_authentication: false  # Optional - defaults to false (KEEP false in production)
vault_ssh_host_key_checking: true  # Optional - defaults to false (SET true in production)
vault_ssh_common_args: ""  # Optional - has default (clear for production)

# === SERVICE CONFIGURATION ===
vault_redis_memory_mb: 2048  # Optional - defaults to 512 (increase for production)
vault_pgbouncer_pool_size: 50  # Optional - defaults to 25 (tune for load)
vault_pgbouncer_max_clients: 200  # Optional - defaults to 100
vault_listen_interface: "0.0.0.0"  # Optional - has default
vault_localhost: "127.0.0.1"  # Optional - has default

# === DATABASE CONFIGURATION ===
vault_db_encoding: "UTF8"  # Optional - has default
vault_db_lc_collate: "en_US.UTF-8"  # Optional - has default
vault_db_lc_ctype: "en_US.UTF-8"  # Optional - has default

# === PRODUCTION SPECIFIC ===
# Use strong, unique passwords for production
# Consider using a password manager for generation
# Regularly rotate these credentials
# Enable monitoring and security features

# === DOCKER CONFIGURATION ===
vault_portainer_domain_name: "admin.example.com"
vault_portainer_docker_name: "portainer"
vault_portainer_internal_port: 9000
vault_portainer_client_max_body_size: "100M"  # Max body size for Docker client requests
vault_portainer_ssl_challenge_path: "/etc/letsencrypt/acme-challenge"

# === USAGE INSTRUCTIONS ===
# 1. Copy this file: cp .vault/prod.yml.example .vault/my-prod.yml
# 2. Edit with your real credentials: vim .vault/my-prod.yml
# 3. Encrypt for security: ansible-vault encrypt .vault/my-prod.yml
# 4. Use in playbooks: ansible-playbook -i inventory/prod.yml -e @.vault/my-prod.yml playbook.yml --ask-vault-pass
# 5. Or use with CLI: source .venv/bin/activate && cli security --install --prod